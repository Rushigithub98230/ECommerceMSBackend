// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserService.Data;

#nullable disable

namespace UserService.Migrations
{
    [DbContext(typeof(UserDbContext))]
    partial class UserDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UserService.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 3, 31, 10, 36, 9, 710, DateTimeKind.Utc).AddTicks(8626),
                            Email = "admin123@yopmail.com.com",
                            FirstName = "Admin",
                            LastName = "User",
                            PasswordHash = "$2a$11$LnWxFljr8tkPfC0hxAgVqOWV7ysQXsi9lOxapEddXumWvtCu0FxTW",
                            PhoneNumber = "9823016913",
                            Role = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 3, 31, 10, 36, 9, 871, DateTimeKind.Utc).AddTicks(7220),
                            Email = "seller123@yopmail.com",
                            FirstName = "Seller",
                            LastName = "User",
                            PasswordHash = "$2a$11$61gykdCNPRWUNadWb.8e5.DNAcFe4.K7Y7J3Ur8kZKjELoO59bTJ.",
                            PhoneNumber = "9823016913",
                            Role = "seller"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 3, 31, 10, 36, 10, 33, DateTimeKind.Utc).AddTicks(3843),
                            Email = "customer123@yopmail.com",
                            FirstName = "Customer",
                            LastName = "User",
                            PasswordHash = "$2a$11$AEyxBcGFDEbrstTZR5UrCeqzRLblEUZuF0tBJwqwlkEo063SyGUrG",
                            PhoneNumber = "9823016913",
                            Role = "customer"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
